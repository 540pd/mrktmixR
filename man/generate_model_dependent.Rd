% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_transformations.R
\name{generate_model_dependent}
\alias{generate_model_dependent}
\title{Generate Model-Dependent Data Frames with APL Transformations}
\usage{
generate_model_dependent(
  var_info,
  model_df,
  apl_delimiter = "_",
  var_apl_delimiter = "|",
  var_agg_delimiter = "|"
)
}
\arguments{
\item{var_info}{A named numeric vector, character vector, or a list detailing the variables and
their respective APL transformations. The interpretation of \code{var_info} depends on its format:
\itemize{
\item Named Numeric Vector: If \code{var_info} is a named numeric vector, each named element represents
a variable to which APL transformations will be applied. The format of each name should be
"VariableName|Adstock_Power_Lag", where "Adstock", "Power", and "Lag" are numeric values
separated by \code{var_apl_delimiter}. Example: "TV|0.8_0.22_0".
\item Character Vector: If \code{var_info} is a character vector, it represents one or more variables
to which APL transformations will be applied. Variables can be specified individually or
aggregated using \code{var_agg_delimiter}. Example: "TV" or "TV|Radio".
\item List: If \code{var_info} is a list, it should contain detailed specifications for each variable.
This format allows you to specify APL attributes (Adstock, Power, Lag, Constraints) for each
variable individually. Example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{var_info_list <- list(
  TV = list(
    adstock = setNames(c(.1, .2, .1), c("start", "end", "step")),
    power = setNames(c(.2, .3, .1), c("start", "end", "step")),
    lag = setNames(c(0, 1, 1), c("start", "end", "step")),
    constraints = "adstock <= power"
  ),
  Radio = list(
    adstock = setNames(c(.2, .3, .1), c("start", "end", "step")),
    power = setNames(c(.1, .2, .1), c("start", "end", "step")),
    lag = setNames(c(0, 0, 1), c("start", "end", "step")),
    constraints = "adstock <= power"
  )
)
}\if{html}{\out{</div>}}
}}

\item{model_df}{A data frame containing model variables to which the APL
transformations are to be applied.}

\item{apl_delimiter}{Delimiter used for concatenating variable names with
their APL attributes when \code{var_info} is a named numeric vector (default "_").}

\item{var_apl_delimiter}{Delimiter used for separating variable names from their
APL attributes when \code{var_info} is a named numeric vector (default "|").}

\item{var_agg_delimiter}{Delimiter used for aggregating variables (default "|").}
}
\value{
A list containing a tibble of APL information and a list of data
frames with APL transformations applied. The tibble includes variable names
and their APL attributes, while each data frame in the list represents a
model-dependent transformation.
}
\description{
Applies Adstock-Power-Lag (APL) transformations to variable information within
a model data frame. The function returns a list containing APL information
and a list of data frames with applied transformations. The \code{apl_delimiter}
and \code{var_apl_delimiter} are used to interpret and construct variable names when
\code{var_info} is a named numeric vector. When \code{var_info} is a list, the function
generates variable combinations and applies APL transformations to \code{model_df}.
}
\examples{
\dontrun{
# Named vector input with single variable
var_info_vec <- "TV"
result_vec <- generate_model_dependent(var_info_vec, model_df)

# Named vector input with multiple variables aggregated
var_info_vec <- "TV|Radio"
result_vec <- generate_model_dependent(var_info_vec, model_df)
var_info_vec <- c("TV|Radio","Radio|TV")
result_vec <- generate_model_dependent(var_info_vec, model_df)

var_info_vec <- setNames(5, "TV|0.8_0.22_0")
result_vec <- generate_model_dependent(var_info_vec, model_df)

var_info_vec <- setNames(c(1,5), c("TV|0.8_0.22_0", "Radio|.3_.2_0"))
result_vec <- generate_model_dependent(var_info_vec, model_df)

# List input with APL specifications
var_info_list <- list(
  TV = list(
    adstock = setNames(c(.1, .2, .1), c("start", "end", "step")),
    power = setNames(c(.2, .3, .1), c("start", "end", "step")),
    lag = setNames(c(0, 1, 1), c("start", "end", "step")),
    constraints = "adstock <= power"
  )
)
result_list <- generate_model_dependent(var_info_list, model_df)

var_info_list <- list(
  TV = list(
    adstock = setNames(c(.1, .2, .1), c("start", "end", "step")),
    power = setNames(c(.2, .3, .1), c("start", "end", "step")),
    lag = setNames(c(0, 1, 1), c("start", "end", "step")),
    constraints = "adstock <= power"
  ),
  Radio = list(
    adstock = setNames(c(.2, .3, .1), c("start", "end", "step")),
    power = setNames(c(.1, .2, .1), c("start", "end", "step")),
    lag = setNames(c(0, 0, 1), c("start", "end", "step")),
    constraints = "adstock <= power"
  )
)
result_list <- generate_model_dependent(var_info_list, model_df)

}

}
