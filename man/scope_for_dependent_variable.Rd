% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxiliary_functions.R
\name{scope_for_dependent_variable}
\alias{scope_for_dependent_variable}
\title{Scope for Dependent Variable}
\usage{
scope_for_dependent_variable(
  previous_var_apl,
  current_var_apl,
  var_agg_delimiter = "|",
  delimiter = "_"
)
}
\arguments{
\item{previous_var_apl}{Named numeric vector of previous variable names with application suffix.
The names must contain variables with APL as per the specified delimiter.
The values represent the contribution.}

\item{current_var_apl}{Named numeric vector of current variable names with application suffix.
The names must contain variables with APL as per the specified delimiter.
The values represent the contribution.}

\item{var_agg_delimiter}{Delimiter used for variable aggregation (default is "|").}

\item{delimiter}{Delimiter used for variable parts (default is "_").}
}
\value{
Feasible dependent variables based on the given conditions.
}
\description{
This function takes the previous named variable as a base and tries to find a new feasible named vector
based on whether it involves aggregation, aggregation and segregation, update in the variable,
or segregation. It assumes the current variable with APL is based on these cases in the named vector.
The names of these vectors will be variables with APL, and their values represent the contribution of the model.
}
\details{
Determines the feasible dependent variables based on previous and current variable names.

The function aims to identify feasible dependent variables by comparing the previous and current variable names.
It considers cases such as aggregation, aggregation and segregation, variable updates, or segregation in the process.
The named vectors generated represent the contribution of the model, with variable names containing APL information.
}
\examples{
\dontrun{
# Both matching - aggregation and segregation
previous_var_apl <- c("var1|A_.2_2_5" = 0.5, "var1|A_.2_2_9" = 0.5, "var2|B_.5_.4_.2" = 0.3,
 "var2|B_.5_.1_.2" = 0.4, "var2|B_.5_.1_9" = 0.4, "afaf_2_3_4" = 0)
current_var_apl <- c("var1|A_.2_2_5" = 0.6, "var1|A_.2_2_9" = 0.6, "var2|B_.5_.4_.2" = 0.9,
 "var2|B_.5_.4_.2" = 10)
scope_for_dependent_variable(previous_var_apl, current_var_apl)

# Aggregation and carry forward
previous_var_apl <- c("var3_.2_2_5" = 0.5, "B_.5_.4_.2" = 0.3, "var3_.2_9_5" = 0.78,
 "B_.9_.4_.2" = 0.33, "d_1_2_4" = 0)
current_var_apl <- c("var3|B_2_4_9" = 0.9, "var3|B_2_4_2" = 0.9, "var3|B_2_4_2" = 10,
 "var3|B_2_4_2" = 11)
scope_for_dependent_variable(previous_var_apl, current_var_apl)

# Segregation and carry forward
previous_var_apl <- c("var1|c_.2_2_5" = 0.5, "var1|c_.2_2_1" = 0.5, "d_1_2_4" = 0,
 "d_1_2_1" = 0)
current_var_apl <- c("var1_2_4_2" = 0.9, "c_.5_.4_.2" = 0.9, "var1_2_4_2" = 11,
 "c_.5_.4_.2" = 0.10, "c_.5_.4_.2" = 0.10, "c_.5_.4_9" = 0.10)
scope_for_dependent_variable(previous_var_apl, current_var_apl)

}

}
